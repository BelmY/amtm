#!/bin/sh
#bof

# Troubleshoot options
#set -x
#set -v

# Set environment PATH to system binaries
export PATH=/sbin:/bin:/usr/sbin:/usr/bin$PATH


# Author: thelonelycoder / decoderman
# https://www.snbforums.com/members/thelonelycoder.25480/
# https://github.com/decoderman

# How to install on Asuswrt-Merlin
# Enter this into your favorite SSH terminal, without the leading "#":
# /usr/sbin/curl -Os https://raw.githubusercontent.com/decoderman/amtm/master/amtm && sh amtm

# Version, release date
version=0.1
release="November 27 2017"
title="SNBForums Asuswrt-Merlin Terminal Menu"
thisScript=amtm

# Functions follow
about_amtm(){
	echo
	print_dash_line
	echo
	echo "About $thisScript, the $title"
	echo "Version $version, released on $release"
	echo
	echo "A shortcut manager for popular scripts for wireless routers running Asuswrt-Merlin firmware"
	echo
	echo "For updates and discussion visit this thread"
	echo "https://www.snbforums.com/threads/amtm-the-snbforums-asuswrt-merlin-terminal-menu.42415/"
	echo
	echo "Project is hosted on GitHub:"
	echo "https://github.com/decoderman/amtm"
	echo
	echo "This tool was suggested by SNB Member @Raphie here:"
	echo "https://www.snbforums.com/threads/skynet-asus-firewall-addition-dynamic-malware-country-manual-ip-blocking.16798/page-71#post-360428"
	echo
	echo "Author: thelonelycoder / decoderman"
	echo "https://www.snbforums.com/members/thelonelycoder.25480/"
	echo "https://github.com/decoderman"
	echo
	echo "Contributors: Add your handle here..."
	echo
	echo "Legal Boilerplate:"
	echo "$thisScript is free to use under the GNU General Public License, version 3.0 (GPL-3.0)"
	echo "https://opensource.org/licenses/GPL-3.0"
	echo
	read -r -p "Hit [Enter] to return to menu ";echo
	show_amtm menu
}

print_dash_line(){
     echo "----------------------------------------"
}

print_info_line(){
echo -e "\\n----------------| INFO |----------------\\n"
}

print_end_line(){
  echo -e "________________________________________\\n"
}

continue_dialog(){
	print_dash_line
	while true;do
		echo -en "Continue? [1=Yes 2=No] ";read -r continue
		case $continue in
			1)	echo;break;;
			2)	show_amtm menu;break;;
			*)	echo -e "\\n input is not an option\\n";;
		esac
	done
}

install_amtm(){
	mkdir -p "/jffs/scripts"

	if [ "$(nvram get jffs2_scripts)" != "1" ]; then
		nvram set jffs2_scripts=1
		nvram commit
		forcereboot=1
	fi

	# install to /jffs/scripts/$thisScript
	[ ! -f "/jffs/scripts/$thisScript" ] && cp "$0" /jffs/scripts/$thisScript
	chmod 0755 /jffs/scripts/$thisScript
	installWith="/jffs/scripts/$thisScript"

	# add link to /opt/bin whenever found (will be checked again at every start further down
	if [ -d "/opt/bin" ] && [ ! -f "/opt/bin/$thisScript" ]; then
		ln -s /jffs/scripts/$thisScript /opt/bin
		installWith=$thisScript
	fi

	# reboot if custom scripts were not enabled before
	if [ "$forcereboot" = "1" ]; then
		echo
		echo -e "\\n$title\\nsuccessfully installed!\\nYou can start it with \"$installWith\"\\n(without the quotes)\\n"
		echo "But first, a reboot of your router is required to finish the install."
		read -r -p "Hit [Enter] to confirm ";echo
		reboot
		exit 0
	else
		[ "$0" = "/jffs/scripts/$thisScript" ] && sameshell= || sameshell="exec"
		$sameshell /jffs/scripts/$thisScript "$title\\nsuccessfully installed!\\nYou can now start it with \"$installWith\"\\n(without the quotes)"
	fi
}

remove_amtm(){
	print_dash_line
	echo
	echo "1  Remove $thisScript"
	echo "2  Return to menu"
	echo
	continue_dialog

	rm -f /opt/bin/$thisScript
	rm -f /jffs/scripts/$thisScript
	rm -f "$0"
	echo "Removed all traces of $thisScript"
	echo
	exit 0
}

update_amtm(){
	remoteurl="https://raw.githubusercontent.com/decoderman/amtm/master/amtm"
	# thanks @Adamm, liked your updater
	curl -fs --retry 3 "$remoteurl" | grep -qF "version=" || show_amtm "Update aborted,\\ncould not retrieve version"
	remotever="$(curl -fs --retry 3 "$remoteurl" | grep "^version=" | sed -e 's/version=//')"

	[ "$version" = "$remotever" ] && show_amtm "$title\\nis up to date: v$remotever"

	if [ "$version" != "$remotever" ]; then
		echo -e "\\n$title\\nupdate available: v$version to v$remotever\\nupdating $thisScript now...\\n"
		curl -fs --retry 3 "$remoteurl" -o "$0" && exec /jffs/scripts/$thisScript "$title\\nupdated: from v$version to v$remotever"
	fi
}

recheck_opt(){
	# recheck if /opt/bin has come available
	if [ "$0" = "/jffs/scripts/$thisScript" ] && [ -d "/opt/bin" ] && [ ! -f "/opt/bin/$thisScript" ]; then
		ln -s /jffs/scripts/$thisScript /opt/bin
		show_amtm "/opt/bin detected!\\nYou can now start $thisScript with \"$thisScript\"\\n(without the quotes)\\n"
	fi
}

show_amtm(){
	clear

	# amtm header
	print_dash_line
	echo " $title"
	print_dash_line
	printf "%-23s%s\\n" "$thisScript v$version" "by thelonelycoder"
	echo -e "\\n   --SNBForums scripts--"

	# Menu's in alphabetical order

	# 1 AB-Solution menu
	if [ -f "$HOME/ab-solution.sh" ] || [ -f /opt/bin/ab-solution ]; then
		printf "%-11s%s\\n" "1  Open" "AB-Solution"

		if [ -f /opt/bin/ab-solution ]; then

			case_1(){
				clear
				ab-solution
				show_amtm menu
			}
		else

			case_1(){
				clear
				exec sh "$HOME/ab-solution.sh"
			}
		fi
	else
		printf "%-11s%s\\n" "1  Install" "AB-Solution"

		case_1(){
			clear
			print_info_line
			echo -e "This installs AB-Solution\\nTHE Ad-Blocking Solution."
			echo -e "Author: thelonelycoder"
			echo -e "Thread: https://www.snbforums.com/threads/ab-solution-the-ad-blocking-solution-v3-10.37511/"
			continue_dialog
			exec curl -O ab-solution.info/releases/latest/ab-solution.sh && sh ab-solution.sh
		}
	fi


	# 2 dnscrypt installer menu
	if [ -d /jffs/dnscrypt ]; then
		printf "%-11s%s\\n" "2  Update" "dnscrypt installer"

		case_2(){
			clear
			print_info_line
			echo -e "This updates dnscrypt installer"
			continue_dialog
			curl -L -s -k -O https://raw.githubusercontent.com/thuantran/dnscrypt-asuswrt-installer/master/installer && sh installer ; rm installer
			show_amtm "dnscrypt installer updated."
		}
	else
		printf "%-11s%s\\n" "2  Install" "dnscrypt installer"

		case_2(){
			clear
			print_info_line
			echo -e "This installs dnscrypt installer on your router."
			echo -e "Author: bigeyes0x0"
			echo -e "Thread: https://www.snbforums.com/threads/release-dnscrypt-installer-for-asuswrt.36071/"
			continue_dialog
			curl -L -s -k -O https://raw.githubusercontent.com/thuantran/dnscrypt-asuswrt-installer/master/installer && sh installer ; rm installer
			show_amtm "dnscrypt installer installed."
		}
	fi


	# 3 Entware menu
	if [ "$(which opkg)" ]; then
		printf "%-11s%s\\n" "3  Update" "Entware"

		case_3(){
			clear
			print_info_line
			echo -e "This updates and upgrades Entware packages"
			continue_dialog
			opkg update && opkg upgrade
			show_amtm "Entware packages updated and upgraded."
		}
	else
		printf "%-11s%s\\n" "3  Install" "Entware"

		case_3(){
			clear
			print_info_line
			echo -e "This installs Entware on your router.\\nNote that if you plan to install AB-Solution,"
			echo -e "Entware is best installed by it."
			echo -e "Authors: ryzhov_al, mstombs, others"
			continue_dialog
			sh /usr/sbin/entware-setup.sh
			show_amtm "Entware installed."
		}
	fi


	# 4 Pixelserv menu
	if [ "$(which pixelserv-tls)" ]; then
		printf "%-11s%s\\n" "4  Install" "pixelserv-tls beta version"

		case_4(){
			clear
			print_info_line
			echo -e "This install the latest pixelserv-tls beta version."
			echo -e "Be aware this is for advanced users only."
						 
														
			continue_dialog
			sh -c "$(wget -qO - https://kazoo.ga/pixelserv-tls/install-beta.sh)"
			/opt/etc/init.d/S80pixelserv-tls restart
			show_amtm "latest pixelserv-tls beta version installed\\nand restarted."
		}
	else
		printf "%-11s%s\\n" "4  Install" "pixelserv-tls with Entware"

		case_4(){
			clear
			print_info_line
			echo -e "This installs pixelserv-tls on your router.\\nNote that if you plan to install AB-Solution,"
			echo -e "pixelserv-tls is best installed by it."
			echo -e "Author: qvic"
			echo -e "Thread: https://www.snbforums.com/threads/pixelserv-a-better-one-pixel-webserver-for-adblock.26114/"
			continue_dialog
			if [ "$(which opkg)" ]; then
				opkg install pixelserv-tls
				show_amtm "pixelserv-tls installed."
			else
				show_amtm "pixelserv-tls failed, install Entware first."
			fi
		}
	fi


	# 5 Skynet menu
	if [ -f /jffs/scripts/firewall ] && grep -q "sh /jffs/scripts/firewall" /jffs/scripts/firewall-start; then
		printf "%-11s%s\\n" "5  Open" "Skynet"

		case_5(){
			/jffs/scripts/firewall
			show_amtm menu
		}
	else
		printf "%-11s%s\\n" "5  Install" "Skynet"

		case_5(){
			clear
			print_info_line
			echo -e "This installs Skynet on your router."
			echo -e "Author: Adamm"
			echo -e "Thread: https://www.snbforums.com/threads/skynet-asus-firewall-addition-dynamic-malware-country-manual-ip-blocking.16798/"
			continue_dialog
			curl --retry 3 "https://raw.githubusercontent.com/Adamm00/IPSet_ASUS/master/firewall.sh" -o "/jffs/scripts/firewall" && chmod +x /jffs/scripts/firewall && sh /jffs/scripts/firewall install
			show_amtm "Skynet installed."
		}
	fi


	# amtm menu at bottom
	echo -e "\\n   --$thisScript options--"
	echo "u  Update"
	[ -f "/jffs/scripts/$thisScript" ] || [ -f "/opt/bin/$thisScript" ] && echo "r  Remove"  || echo "i  Install"
	echo "a  About"
	echo "e  Exit"

	# Output under amtm menu, the notification area. $1 can be passed as positional parameter
	if [ "$1" = "menu" ]; then
		print_end_line
	else
		print_info_line
		echo -e "$1"
		print_end_line
	fi

	# case switcher
	while true; do

		# Input prompt
		echo -en "Enter selection: ";read -r selection

		case $selection in

			# Scripts go her
			1) case_1;break;;
			2) case_2;break;;
			3) case_3;break;;
			4) case_4;break;;
			5) case_5;break;;

			# amtms own options
			[Uu]) 	update_amtm;break;;
			[Ii]) 	install_amtm;break;;
			[Rr]) 	remove_amtm;break;;
			[Aa]) 	about_amtm;break;;
			[Ee]) 	echo;exit 0;break;;
				*) 	echo -e "\\ninput is not an option\\n";;

		esac

	done
}

# asks to install, show menu, pass along positional parameter
if [ ! -f "/jffs/scripts/$thisScript" ]; then
	echo
	print_dash_line
	echo -e "\\nDo you want to install $thisScript, the\\n$title?\\n"
	continue_dialog
	install_amtm
elif [ -z "$1" ]; then
	recheck_opt
	show_amtm menu
else
	show_amtm "$1"
fi
#eof
